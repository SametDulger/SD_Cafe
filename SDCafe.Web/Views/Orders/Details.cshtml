@model SDCafe.Entities.Order

@{
    ViewData["Title"] = "Sipariş Detayı";
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-lg-10 col-xl-8">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h1>Sipariş Detayı</h1>
                <div>
                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                    {
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                            <i class="fas fa-edit"></i> Düzenle
                        </a>
                    }
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Geri Dön
                    </a>
                </div>
            </div>

            <div class="row">
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h4 class="mb-0 text-center flex-grow-1">@Model.OrderNumber</h4>
                            <span class="badge @GetStatusBadgeClass(Model.Status) fs-6 px-3 py-2">
                                @GetStatusText(Model.Status)
                            </span>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <p><strong>Masa:</strong> @Model.Table?.TableNumber</p>
                                    <p><strong>Garson:</strong> @(Model.Waiter?.FirstName + " " + Model.Waiter?.LastName)</p>
                                    <p><strong>Toplam Tutar:</strong> @Model.TotalAmount.ToString("C")</p>
                                </div>
                                <div class="col-md-6">
                                    <p><strong>Oluşturulma:</strong> @Model.CreatedDate.ToString("dd.MM.yyyy HH:mm")</p>
                                    @if (Model.UpdatedDate.HasValue)
                                    {
                                        <p><strong>Son Güncelleme:</strong> @Model.UpdatedDate.Value.ToString("dd.MM.yyyy HH:mm")</p>
                                    }
                                    @if (Model.CompletedDate.HasValue)
                                    {
                                        <p><strong>Tamamlanma:</strong> @Model.CompletedDate.Value.ToString("dd.MM.yyyy HH:mm")</p>
                                    }
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.Notes))
                            {
                                <div class="mt-3">
                                    <p><strong>Notlar:</strong></p>
                                    <p>@Model.Notes</p>
                                </div>
                            }
                        </div>
                    </div>

                    @if (Model.OrderItems != null && Model.OrderItems.Any())
                    {
                        <div class="card mt-3">
                            <div class="card-header">
                                <h6>Sipariş Kalemleri</h6>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>Ürün</th>
                                                <th>Miktar</th>
                                                <th>Birim Fiyat</th>
                                                <th>Toplam</th>
                                                <th>Not</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.OrderItems)
                                            {
                                                <tr>
                                                    <td>@item.Product?.Name</td>
                                                    <td>@item.Quantity</td>
                                                    <td>@item.UnitPrice.ToString("C")</td>
                                                    <td>@item.TotalPrice.ToString("C")</td>
                                                    <td>@(string.IsNullOrEmpty(item.Notes) ? "-" : item.Notes)</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                
                <div class="col-md-4">
                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                    {
                        <div class="card">
                            <div class="card-header">
                                <h5>İşlemler</h5>
                            </div>
                            <div class="card-body">
                                <div class="d-grid gap-2">
                                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-warning">
                                        <i class="fas fa-edit"></i> Durumu Güncelle
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(SDCafe.Entities.OrderStatus status)
    {
        return status switch
        {
            SDCafe.Entities.OrderStatus.Pending => "bg-warning",
            SDCafe.Entities.OrderStatus.Preparing => "bg-info",
            SDCafe.Entities.OrderStatus.Ready => "bg-primary",
            SDCafe.Entities.OrderStatus.Completed => "bg-secondary",
            SDCafe.Entities.OrderStatus.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private string GetStatusText(SDCafe.Entities.OrderStatus status)
    {
        return status switch
        {
            SDCafe.Entities.OrderStatus.Pending => "Bekliyor",
            SDCafe.Entities.OrderStatus.Preparing => "Hazırlanıyor",
            SDCafe.Entities.OrderStatus.Ready => "Hazır",
            SDCafe.Entities.OrderStatus.Completed => "Tamamlandı",
            SDCafe.Entities.OrderStatus.Cancelled => "İptal Edildi",
            _ => "Bilinmiyor"
        };
    }
} 