@model IEnumerable<SDCafe.Entities.Order>

@{
    ViewData["Title"] = "Aktif Siparişler";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1>Aktif Siparişler</h1>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-plus"></i> Yeni Sipariş
    </a>
</div>

<div class="row">
    @foreach (var order in Model)
    {
        <div class="col-md-6 mb-3">
            <div class="card h-100">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h6 class="mb-0">@order.OrderNumber</h6>
                    <span class="badge @GetStatusBadgeClass(order.Status)">
                        @GetStatusText(order.Status)
                    </span>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-6">
                            <p><strong>Masa:</strong> @order.Table?.TableNumber</p>
                            <p><strong>Garson:</strong> @(order.Waiter?.FirstName + " " + order.Waiter?.LastName)</p>
                        </div>
                        <div class="col-6">
                            <p><strong>Toplam:</strong> @order.TotalAmount.ToString("C")</p>
                            <p><strong>Tarih:</strong> @order.CreatedDate.ToString("dd.MM.yyyy HH:mm")</p>
                        </div>
                    </div>
                    @if (!string.IsNullOrEmpty(order.Notes))
                    {
                        <div class="mt-2">
                            <small class="text-muted"><strong>Not:</strong> @order.Notes</small>
                        </div>
                    }
                </div>
                <div class="card-footer">
                    <div class="btn-group w-100" role="group">
                        <a asp-action="Details" asp-route-id="@order.Id" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-eye"></i> Detay
                        </a>
                        <a asp-action="Edit" asp-route-id="@order.Id" class="btn btn-outline-warning btn-sm">
                            <i class="fas fa-edit"></i> Durum Güncelle
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@if (!Model.Any())
{
    <div class="text-center py-5">
        <i class="fas fa-clipboard-check fa-3x text-muted mb-3"></i>
        <h4 class="text-muted">Aktif sipariş bulunamadı</h4>
        <p class="text-muted">Şu anda aktif sipariş bulunmuyor.</p>
    </div>
}

@functions {
    private string GetStatusBadgeClass(SDCafe.Entities.OrderStatus status)
    {
        return status switch
        {
            SDCafe.Entities.OrderStatus.Pending => "bg-warning",
            SDCafe.Entities.OrderStatus.Preparing => "bg-info",
            SDCafe.Entities.OrderStatus.Ready => "bg-primary",
            SDCafe.Entities.OrderStatus.Completed => "bg-secondary",
            SDCafe.Entities.OrderStatus.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private string GetStatusText(SDCafe.Entities.OrderStatus status)
    {
        return status switch
        {
            SDCafe.Entities.OrderStatus.Pending => "Bekliyor",
            SDCafe.Entities.OrderStatus.Preparing => "Hazırlanıyor",
            SDCafe.Entities.OrderStatus.Ready => "Hazır",
            SDCafe.Entities.OrderStatus.Completed => "Tamamlandı",
            SDCafe.Entities.OrderStatus.Cancelled => "İptal Edildi",
            _ => "Bilinmiyor"
        };
    }
} 