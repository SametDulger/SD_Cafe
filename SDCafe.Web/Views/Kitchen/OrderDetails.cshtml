@model SDCafe.Entities.Order

@{
    ViewData["Title"] = "Sipariş Detayı";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1>Sipariş Detayı - @Model.OrderNumber</h1>
    <div>
        <span class="badge @GetStatusBadgeClass(Model.Status)">
            @GetStatusText(Model.Status)
        </span>
        <a asp-action="Index" class="btn btn-outline-secondary ms-2">
            <i class="fas fa-arrow-left"></i> Geri
        </a>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5>Sipariş Bilgileri</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <p><strong>Sipariş No:</strong> @Model.OrderNumber</p>
                        <p><strong>Masa:</strong> @Model.Table?.TableNumber</p>
                        <p><strong>Garson:</strong> @(Model.Waiter?.FirstName + " " + Model.Waiter?.LastName)</p>
                        <p><strong>Oluşturulma:</strong> @Model.CreatedDate.ToString("dd.MM.yyyy HH:mm")</p>
                    </div>
                    <div class="col-md-6">
                        <p><strong>Toplam Tutar:</strong> @Model.TotalAmount.ToString("C")</p>
                        <p><strong>Durum:</strong> @GetStatusText(Model.Status)</p>
                        @if (Model.CompletedDate.HasValue)
                        {
                            <p><strong>Tamamlanma:</strong> @Model.CompletedDate.Value.ToString("dd.MM.yyyy HH:mm")</p>
                        }
                    </div>
                </div>
                
                @if (!string.IsNullOrEmpty(Model.Notes))
                {
                    <div class="alert alert-warning">
                        <strong>Not:</strong> @Model.Notes
                    </div>
                }
            </div>
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5>İşlemler</h5>
            </div>
            <div class="card-body">
                @if (Model.Status == SDCafe.Entities.OrderStatus.Pending)
                {
                    <form asp-action="AcceptOrder" method="post">
                        <input type="hidden" name="orderId" value="@Model.Id" />
                        <button type="submit" class="btn btn-warning w-100 mb-2">
                            <i class="fas fa-check"></i> Siparişi Kabul Et
                        </button>
                    </form>
                }
                
                @if (Model.Status == SDCafe.Entities.OrderStatus.Preparing)
                {
                    <form asp-action="CompleteOrder" method="post">
                        <input type="hidden" name="orderId" value="@Model.Id" />
                        <button type="submit" class="btn btn-success w-100 mb-2">
                            <i class="fas fa-check-double"></i> Siparişi Hazırla
                        </button>
                    </form>
                }
                
                <a asp-action="Index" class="btn btn-outline-secondary w-100">
                    <i class="fas fa-list"></i> Tüm Siparişler
                </a>
            </div>
        </div>
    </div>
</div>

<div class="card mt-3">
    <div class="card-header">
        <h5>Sipariş Detayları</h5>
    </div>
    <div class="card-body">
        @if (Model.OrderItems != null && Model.OrderItems.Any())
        {
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Ürün</th>
                            <th class="text-center">Miktar</th>
                            <th class="text-end">Birim Fiyat</th>
                            <th class="text-end">Toplam</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.OrderItems)
                        {
                            <tr>
                                <td>
                                    <strong>@item.Product?.Name</strong>
                                    @if (!string.IsNullOrEmpty(item.Notes))
                                    {
                                        <br><small class="text-muted">@item.Notes</small>
                                    }
                                </td>
                                <td class="text-center">@item.Quantity</td>
                                <td class="text-end">@item.UnitPrice.ToString("C")</td>
                                <td class="text-end">@item.TotalPrice.ToString("C")</td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr class="table-active">
                            <th colspan="3" class="text-end">Toplam:</th>
                            <th class="text-end">@Model.TotalAmount.ToString("C")</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        }
        else
        {
            <p class="text-muted text-center">Sipariş detayı bulunamadı.</p>
        }
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(SDCafe.Entities.OrderStatus status)
    {
        return status switch
        {
            SDCafe.Entities.OrderStatus.Pending => "bg-warning text-dark",
            SDCafe.Entities.OrderStatus.Preparing => "bg-info",
            SDCafe.Entities.OrderStatus.Ready => "bg-primary",
            SDCafe.Entities.OrderStatus.Completed => "bg-secondary",
            SDCafe.Entities.OrderStatus.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }

    private string GetStatusText(SDCafe.Entities.OrderStatus status)
    {
        return status switch
        {
            SDCafe.Entities.OrderStatus.Pending => "Bekliyor",
            SDCafe.Entities.OrderStatus.Preparing => "Hazırlanıyor",
            SDCafe.Entities.OrderStatus.Ready => "Hazır",
            SDCafe.Entities.OrderStatus.Completed => "Tamamlandı",
            SDCafe.Entities.OrderStatus.Cancelled => "İptal Edildi",
            _ => "Bilinmiyor"
        };
    }
} 